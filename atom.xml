<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XieYanshe&#39;s Blog</title>
  
  <subtitle>yanshe</subtitle>
  <link href="https://xys-blog.cf/atom.xml" rel="self"/>
  
  <link href="https://xys-blog.cf/"/>
  <updated>2022-05-13T11:45:28.930Z</updated>
  <id>https://xys-blog.cf/</id>
  
  <author>
    <name>XieYanshe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有关和王有缘暂时停止合作的通知</title>
    <link href="https://xys-blog.cf/posts/2954149272/"/>
    <id>https://xys-blog.cf/posts/2954149272/</id>
    <published>2022-05-13T11:04:33.000Z</published>
    <updated>2022-05-13T11:45:28.930Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><p>尊敬的各位用户：<br>大家好！</p><p>作为班里最大的资源提供中心（602谢言射资源提供站），我公司所提供的资源都是和602王有缘资源提供站经过讨论后出口的，所以在一般情况下，正确率为98%。</p><span id="more"></span><p>但由于620王有缘资源提供站三番五次地调戏我公司创始人——谢言射。同俗地讲，就是将不合格资源和我公司的出口产品讨论，而我公司创始人——谢言射同志又十分信任对方公司的创始人——王有缘，于是将公司提供的合格资源全部替换为602王有缘资源提供站的不合格资源，导致我公司所出口的资源正确率降为93%。</p><p>对此，谢言射在此对各位用户做出道歉，并暂时和王有缘停止合作，希望602王有缘资源提供站能进行反省，并将这些问题彻底地改正，以便为各位用户提供更好的资源。</p><p>当然，602谢言射资源提供站所提供的服务并不会虽之暂停。</p><p align="right">谢言射团队&amp;602谢言射资源提供站</p><p align="right">2022年5月13日</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;尊敬的各位用户：&lt;br&gt;
大家好！&lt;/p&gt;
&lt;p&gt;作为班里最大的资源提供中心（602谢言射资源提供站），我公司所提供的资源都是和602王有缘资源提供站经过讨论后出口的，所以在一般情况下，正确率为98%。&lt;/p&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="公告" scheme="https://xys-blog.cf/tags/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Far Relative’s Birthday Cake 题解</title>
    <link href="https://xys-blog.cf/posts/180282341/"/>
    <id>https://xys-blog.cf/posts/180282341/</id>
    <published>2022-05-12T11:52:09.000Z</published>
    <updated>2022-05-13T11:40:57.446Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="far-relatives-birthday-cake"><a class="markdownIt-Anchor" href="#far-relatives-birthday-cake"></a> Far Relative’s Birthday Cake</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>门的家人要庆祝门的生日聚会。他们很喜欢Famil Door，所以他们打算为他做一个奇怪的生日蛋糕。<br>蛋糕是一个n×n的正方形，由边长为1的相等的方块组成，每个方块不是空的就是由一块巧克力组成。他们买了蛋糕，随机开始把巧克力放在蛋糕上。Famil Door的幸福值将等于有巧克力的单元格在蛋糕的同一行或同一列的对数。法米尔门的家人在想，法米尔的幸福值会是多少？<br>请注意，任何一对都不能超过一次，因为两个不同的单元格不能同时在同一行和同一列中。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>在输入的第一行，你会得到一个整数n（1≤n≤100）–蛋糕边的长度。<br>然后是n行，每行包含n个字符。空的单元格用’.'表示，而含有巧克力的单元格用’C’表示。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>打印Famil Door的幸福值，即共享同一行或同一列的巧克力块的数量。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>3.CCC..C.C</code></pre><p>输出</p><pre><code>4</code></pre><p>输入</p><pre><code>4CC..C..C.CC..CC.</code></pre><p>输出</p><pre><code>9</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>如果我们从上到下对行进行编号，从左到右对列进行编号，那么，在第一个样本中共享同一行的作品是。</p><p>(1,2) and (1,3)<br>(3,1) and (3,3)<br>共享同一列的作品有：<br>(2,1) and (3,1)<br>(1,3) and (3,3)</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><blockquote><p>骗分过样例<br>暴力出奇迹<br>暴搜挂着机<br>打标进省一</p></blockquote><p><s>咳咳咳，不装了</s><br>数据只有100<br>考虑暴力！！！</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> a[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//freopen(".in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen(".out","w",stdout);</span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++){</span><br><span class="line">a[i][j] = s[j<span class="number">-1</span>];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++){</span><br><span class="line"><span class="keyword">if</span> (a[i][j] == <span class="string">'C'</span>){</span><br><span class="line">sum++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans += sum*(sum<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line"><span class="type">int</span> sum1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++){</span><br><span class="line"><span class="keyword">if</span> (a[j][i] == <span class="string">'C'</span>){</span><br><span class="line">sum1++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans += sum1*(sum1<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    1 MS<br>内存    720 KB<br>语言    C++<br>代码长度    655</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;far-relatives-birthday-cake&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#far-relatives-birthday-cake&quot;&gt;&lt;/a&gt; Far Relative’s Birthday Cake&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Bear and Colors题解</title>
    <link href="https://xys-blog.cf/posts/2694878122/"/>
    <id>https://xys-blog.cf/posts/2694878122/</id>
    <published>2022-05-12T11:43:49.000Z</published>
    <updated>2022-05-13T11:40:57.428Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="bear-and-colors"><a class="markdownIt-Anchor" href="#bear-and-colors"></a> Bear and Colors</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>小熊利马克有n个彩色的球，排列在一长排。球的编号为1到n，从左到右。有n种可能的颜色，也编号为1到n。<br>对于一个固定的球的区间（连续元素的集合），我们可以定义一个主导颜色。这是一种在该区间内出现次数最多的颜色。如果一些颜色之间出现平局，则选择数字（指数）最小的颜色作为主导颜色。<br>这里总共有n*(n+1)/2多少个非空的区间。对于每种颜色，你的任务是计算这种颜色占主导地位的区间的数量。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>输入的第一行包含一个整数n（1≤n≤5000）–球的数量。<br>第二行包含n个整数t1,t2,…,tn（1≤ti≤n），ti是第i个球的颜色。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>打印n个整数。其中第i个应该等于第i个是主色的间隔数。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>41 2 1 2</code></pre><p>输出</p><pre><code>7 3 0 0</code></pre><p>输入</p><pre><code>31 1 1</code></pre><p>输出</p><pre><code>6 0 0</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>在第一个样本中，颜色2在三个区间中占优势。<br>一个区间[2,2]包含一个球。这个球的颜色是2，所以它显然是一个主导颜色。<br>一个区间[4,4]包含一个球，颜色还是2。<br>一个区间[2,4]包含两个颜色为2的球和一个颜色为1的球。<br>还有7个区间，颜色1在所有的区间中都是主导色。</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>数论！数论！数论！！！！</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5010</span>][<span class="number">5010</span>];</span><br><span class="line"><span class="type">int</span> sum[<span class="number">5010</span>];</span><br><span class="line"><span class="type">int</span> chen_zhe[<span class="number">5010</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">cin &gt;&gt; chen_zhe[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line"><span class="type">int</span> maxn = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> kkksc03 = chen_zhe[i] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; ++j){</span><br><span class="line">a[i][chen_zhe[j] - <span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">if</span> (a[i][chen_zhe[j] - <span class="number">1</span>] &gt; maxn) {</span><br><span class="line">maxn = a[i][chen_zhe[j] - <span class="number">1</span>];</span><br><span class="line">kkksc03 = chen_zhe[j] - <span class="number">1</span>;</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (a[i][chen_zhe[j] - <span class="number">1</span>] == maxn) {</span><br><span class="line"><span class="keyword">if</span> (chen_zhe[j] - <span class="number">1</span> &lt; kkksc03) {</span><br><span class="line">kkksc03 = chen_zhe[j] - <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">sum[kkksc03]++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">cout &lt;&lt; sum[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    1 MS<br>内存    1568 KB<br>语言    C++<br>代码长度    684</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;bear-and-colors&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bear-and-colors&quot;&gt;&lt;/a&gt; Bear and Colors&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Bear and Two Paths题解</title>
    <link href="https://xys-blog.cf/posts/3555695836/"/>
    <id>https://xys-blog.cf/posts/3555695836/</id>
    <published>2022-05-12T11:20:50.000Z</published>
    <updated>2022-05-13T11:40:57.442Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="bear-and-two-paths"><a class="markdownIt-Anchor" href="#bear-and-two-paths"></a> Bear and Two Paths</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>熊岛有n个城市，编号为1到n。城市通过双向道路连接。每条路都连接着两个不同的城市。没有两条路是连接同一对城市的。</p><p>有一次，熊利马克在一个城市a，他想去一个城市b，但没有直接的连接，所以他决定走很长的路，每个城市正好走一次。从形式上看。</p><p>a和b之间没有路。<br>存在一个由n个不同的城市组成的序列（路径）v1,v2,…,vn，v1=a，vn=b，并且在vi和vi+1之间有一条路，为 。<br>有一天，类似的事情发生了。利马克想在一个城市c和一个城市d之间旅行。它们之间没有路，但存在一个n个不同城市的序列u1,u2,…,un，u1=c，un=d，并且在ui和ui+1之间有一条路。</p><p>此外，Limak认为在Bearland最多有k条路。他想知道自己的记忆是否正确。</p><p>给定n，k和四个不同的城市a，b，c，d，你能找到满足所有给定条件的可能路径（v1，…，vn）和（u1，…，un）吗？找到任何解决方案，如果不可能，则打印-1。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>输入的第一行包含两个整数n和k（4≤n≤1000，n-1≤k≤2n-2）–分别为城市的数量和允许的最大道路数量。</p><p>第二行包含四个不同的整数a、b、c和d（1≤a、b、c、d≤n）。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>如果不可能满足所有给定条件，则打印-1。否则，打印两行路径描述。这两行中的第一行应该包含n个不同的整数v1,v2,…,vn，其中v1=a和vn=b。第二行应该包含n个不同的整数u1,u2,…,un，其中u1=c，un=d。</p><p>两条路径最多产生2n-2条路。(v1,v2), (v2,v3), …, (vn-1,vn), (u1,u2), (u2,u3), …, (un-1,un)。如果你的答案包含超过k条不同的道路或有任何其他条件的破坏，你的答案将被视为错误。请注意，(x,y)和(y,x)是同一条路。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>7 112 4 7 3</code></pre><p>输出</p><pre><code>2 7 1 5 6 3 47 2 1 5 6 4 3</code></pre><p>输入</p><pre><code>1000 99910 20 30 40</code></pre><p>输出</p><pre><code>-1</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>在第一个样本测试中，应该有7个城市和最多11条道路。所提供的样本解决方案生成了10条道路，如图所示。你还可以看到长度为n的2到4的简单路径，以及7到3的路径。<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516402853802.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516402853802.png" alt=""></a></p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>按题目模拟即可~<br>就很奇怪<br>样例都通不过<br>交上去就AC了？</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> a,b,c,d;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//freopen(".in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen(".out","w",stdout);</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line"><span class="keyword">if</span> (k &lt; n+<span class="number">1</span> || n == <span class="number">4</span>){</span><br><span class="line">cout &lt;&lt; <span class="string">"-1\n"</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">" "</span> &lt;&lt; c &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line"><span class="keyword">if</span> (i != a &amp;&amp; i != b &amp;&amp; i != c &amp;&amp; i != d){</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">v.<span class="built_in">push_back</span>(i);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; d &lt;&lt; <span class="string">" "</span> &lt;&lt; b &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">cout &lt;&lt; c &lt;&lt; <span class="string">" "</span> &lt;&lt; a &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="keyword">for</span>  (<span class="type">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); i++){</span><br><span class="line">cout &lt;&lt; v[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; b &lt;&lt; <span class="string">" "</span> &lt;&lt; d &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    1 MS<br>内存    736 KB<br>语言    C++<br>代码长度    621</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;bear-and-two-paths&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bear-and-two-paths&quot;&gt;&lt;/a&gt; Bear and Two Paths&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Bear and Displayed Friends题解</title>
    <link href="https://xys-blog.cf/posts/241418217/"/>
    <id>https://xys-blog.cf/posts/241418217/</id>
    <published>2022-05-12T11:04:09.000Z</published>
    <updated>2022-05-13T11:40:57.437Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="bear-and-displayed-friends"><a class="markdownIt-Anchor" href="#bear-and-displayed-friends"></a> Bear and Displayed Friends</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>利马克是一只小北极熊。他喜欢通过社交网络与其他熊联系。他有n个朋友，他与其中第i个朋友的关系由一个独特的整数ti来描述。这个值越大，友谊就越好。没有两个朋友有相同的值ti。</p><p>春天开始了，熊的冬季睡眠结束了。利马克刚刚醒来并登录了。他所有的朋友都还在睡觉，因此他们都不在线。在接下来的几个小时里，他们中的一些（也许是全部）会出现在网上，一次一个。</p><p>系统显示正在在线的朋友。在屏幕上，最多可以显示k个朋友。如果有超过k个朋友在线，那么系统只显示其中最好的k个朋友–那些有最大蒂的朋友。</p><p>你的任务是处理两种类型的查询。</p><p>“1 id”–朋友id成为在线。保证他以前不在线。<br>“2 id”- 检查系统是否显示了朋友的ID。在另一行打印 "YES "或 “NO”。<br>你能帮助Limak并回答所有第二类的询问吗？</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>第一行包含三个整数n、k和q（1≤n,q≤150000,1≤k≤min(6,n)）–分别是朋友的数量、显示的最大在线朋友数量和查询的数量。</p><p>第二行包含n个整数t1,t2,…,tn（1≤ti≤1e9），其中ti描述Limak与第i个朋友的关系有多好。</p><p>下面q行中的第i行包含两个整数typei和idi（1≤typei≤2,1≤idi≤n）–第i个查询。如果typei=1，那么朋友idi成为在线。如果typei=2，那么你应该检查一个朋友idi是否被显示。</p><p>保证没有两个第一类型的查询会有相同的白痴，因为一个朋友不可能在线两次。另外，保证至少有一个查询是第二种类型的（typei=2），所以输出不会是空的。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>对于每个第二类型的查询，如果给定的朋友被显示，则打印一行答案–“YES”（不带引号），否则打印 “NO”（不带引号）。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>4 2 8300 950 500 2001 32 42 31 11 22 12 22 3</code></pre><p>输出</p><pre><code>NOYESNOYESYES</code></pre><p>输入</p><pre><code>6 3 950 20 51 17 99 241 31 41 51 22 42 21 12 42 3</code></pre><p>输出</p><pre><code>NOYESNOYES</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>在第一个例子中，Limak有4个朋友，他们最初都在睡觉。起初，系统显示无人，因为没有人在线。有以下8个查询。<br>“1 3”- 朋友3成为在线。<br>“2 4”–我们应该检查朋友4是否被显示。他甚至不在线，因此我们打印 “NO”。<br>“2 3”- 我们应该检查朋友3是否被显示。现在他是唯一在线的朋友，系统显示他。我们应该打印 “YES”。<br>“1 1”- 朋友1变得在线。系统现在同时显示朋友1和朋友3。<br>“1 2”–朋友2变成在线。现在有3个朋友在线，但我们得到的是k=2，所以只能显示两个朋友。利马克与朋友1的关系比与其他两个在线朋友的关系差（t1&lt;t2,t3），所以朋友1不会被显示。<br>“2 1”- 打印 “NO”。<br>“2 2”–打印 “YES”。<br>“2 3”–打印 “YES”。</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>很适合联系优先队列的一道题……<br>直接打！</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k,q;</span><br><span class="line"><span class="type">int</span> a[<span class="number">150010</span>];</span><br><span class="line">priority_queue &lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,less&lt;<span class="type">int</span>&gt; &gt; q1,q2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//freopen(".in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen(".out","w",stdout);</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; k &gt;&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++){</span><br><span class="line"><span class="type">int</span> ch,id;</span><br><span class="line">cin &gt;&gt; ch &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="number">1</span>){</span><br><span class="line">q1.<span class="built_in">push</span>(a[id]);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (!q1.<span class="built_in">empty</span>()){</span><br><span class="line">q2 = q1;</span><br><span class="line"><span class="type">bool</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; j++){</span><br><span class="line"><span class="keyword">if</span> (a[id] == q2.<span class="built_in">top</span>()){</span><br><span class="line">cout &lt;&lt; <span class="string">"YES\n"</span>;</span><br><span class="line">b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">q2.<span class="built_in">pop</span>();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (!b){</span><br><span class="line">cout &lt;&lt; <span class="string">"NO\n"</span>;</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">cout &lt;&lt; <span class="string">"NO\n"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    0 MS<br>内存    720 KB<br>语言    C++<br>代码长度    700</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;bear-and-displayed-friends&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bear-and-displayed-friends&quot;&gt;&lt;/a&gt; Bear and Displayed Friends&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>公告栏</title>
    <link href="https://xys-blog.cf/posts/1528610346/"/>
    <id>https://xys-blog.cf/posts/1528610346/</id>
    <published>2022-05-12T10:55:47.000Z</published>
    <updated>2022-05-12T10:59:27.172Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%B1%B6%E5%B7%9D14%E5%B9%B4.jpg" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%B1%B6%E5%B7%9D14%E5%B9%B4.jpg" alt=""></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="公告" scheme="https://xys-blog.cf/tags/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Bear and Three Balls题解</title>
    <link href="https://xys-blog.cf/posts/3224990952/"/>
    <id>https://xys-blog.cf/posts/3224990952/</id>
    <published>2022-05-11T12:47:25.000Z</published>
    <updated>2022-05-12T10:57:53.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="bear-and-three-balls"><a class="markdownIt-Anchor" href="#bear-and-three-balls"></a> Bear and Three Balls</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>利马克是一只小北极熊。他有n个球，第i个球的大小为ti。</p><p>利马克想给他的三个朋友各送一个球。送礼物并不容易，为了让朋友们高兴，利马克必须遵守两条规则。</p><p>没有两个朋友可以得到相同大小的球。 没有两个朋友可以得到大小相差超过2的球。 例如，利马克可以选择大小为4、5和3的球，或者大小为90、91和92的球。但他不能选择尺寸为5、5和6的球（两个朋友会得到相同尺寸的球），也不能选择尺寸为30、31和33的球（因为尺寸30和33相差超过2）。</p><p>你的任务是检查Limak是否能选择满足上述条件的三个球。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>输入的第一行包含一个整数n（3≤n≤50）–Limak拥有的球的数量。</p><p>第二行包含n个整数t1,t2,…,tn（1≤ti≤1000），ti表示第i个球的大小。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>如果Limak能够选择三个不同大小的球，并且其中任何两个球的大小相差不超过2，则打印 “YES”（不带引号）。否则，打印 “NO”（不带引号）。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入1</p><pre><code>418 55 16 17</code></pre><p>输出1</p><pre><code>YES</code></pre><p>输入2</p><pre><code>640 41 43 44 44 44</code></pre><p>输出2</p><pre><code>NO</code></pre><p>输入3</p><pre><code>85 972 3 4 1 4 970 971</code></pre><p>输出3</p><pre><code>YES</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>在第一个例子中，有4个球，Limak能够选择其中的三个球来满足规则。他必须选择尺寸为18、16和17的球。<br>在第二个例子中，没有办法在不违反规则的情况下给三个朋友送礼物。<br>在第三个例子中，选择球的方法甚至不止一种。<br>选择大小为3、4和5的球。<br>选择尺寸为972、970、971的球。</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>STL大法好！！！<br>直接k！</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> s[<span class="number">10010</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">cin &gt;&gt; s[i];</span><br><span class="line">}</span><br><span class="line"><span class="built_in">sort</span>(s,s+n);</span><br><span class="line"><span class="type">int</span> ans = <span class="built_in">unique</span>(s,s+n)-s;   </span><br><span class="line"><span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans; i++) {</span><br><span class="line"><span class="keyword">if</span>(s[i+<span class="number">1</span>] == s[i]+<span class="number">1</span> &amp;&amp; s[i+<span class="number">2</span>] == s[i+<span class="number">1</span>]+<span class="number">1</span>) {</span><br><span class="line">b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(b){</span><br><span class="line">cout &lt;&lt; <span class="string">"YES\n"</span>;</span><br><span class="line">} <span class="keyword">else</span>{</span><br><span class="line">cout &lt;&lt;<span class="string">"NO\n"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    1 MS<br>内存    720 KB<br>语言    C++<br>代码长度    393</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;bear-and-three-balls&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bear-and-three-balls&quot;&gt;&lt;/a&gt; Bear and Three Balls&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Bear and Five Cards题解</title>
    <link href="https://xys-blog.cf/posts/2000011491/"/>
    <id>https://xys-blog.cf/posts/2000011491/</id>
    <published>2022-05-11T12:35:42.000Z</published>
    <updated>2022-05-12T12:22:54.270Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="bear-and-five-cards"><a class="markdownIt-Anchor" href="#bear-and-five-cards"></a> Bear and Five Cards</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>一只小熊Limak在玩一个游戏。他有五张牌。每张卡片上都写有一个数字。每个数字都是一个正整数。</p><p>利马克可以丢弃（扔掉）一些牌。他的目标是使写在剩余（未丢弃）卡片上的数字之和最小。</p><p>他最多可以丢弃一次两个或三个数字相同的牌。当然，如果不可能选择两张或三张数字相同的牌，他也不会弃牌。</p><p>给出五个写在卡片上的数字，你能找到剩余卡片上数字的最小和吗？</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>输入的唯一一行包含五个整数t1、t2、t3、t4和t5（1≤ti≤100）–写在卡片上的数字。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>打印写在剩余卡片上的数字的最小可能的总和。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入1</p><pre><code>7 3 7 3 20</code></pre><p>输出1</p><pre><code>26</code></pre><p>输入2</p><pre><code>7 9 3 1 8</code></pre><p>输出2</p><pre><code>28</code></pre><p>输入3</p><pre><code>10 10 10 10 10</code></pre><p>输出3</p><pre><code>20</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>在第一个例子中，利马克有数字为7、3、7、3和20的牌。利马克可以做以下其中一个。<br>什么都不做，总和将是7+3+7+3+20=40。 去掉两张数字为7的牌。剩下的总和将是3+3+20=26。<br>移除两张数字为3的牌。剩下的总和是7+7+20=34。<br>你被要求最小化总和，所以答案是26。<br>在第二个例子中，不可能找到两张或三张数字相同的牌。因此，利马克什么也没做，总和是7+9+1+3+8=28。<br>在第三个例子中，所有的牌都有相同的数字。丢弃任何三张牌都是最佳选择。剩下两个数字的总和是10+10=20。</p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p><s>水题一道</s><br>呸<br>模拟题一道<br>上code！</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="comment">//freopen(".in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen(".out","w",stdout);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++){</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">b[a]++;</span><br><span class="line">sum += a;</span><br><span class="line">}</span><br><span class="line">top = sum;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">0</span>; i--){</span><br><span class="line">ans = top;</span><br><span class="line"><span class="keyword">if</span> (b[i] &gt;= <span class="number">3</span>){</span><br><span class="line">ans -= i*<span class="number">3</span>;</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (b[i] == <span class="number">2</span>){</span><br><span class="line">ans -= i*<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line">sum = <span class="built_in">min</span>(sum,ans);</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    0 MS<br>内存    704 KB<br>语言    C++<br>代码长度    451</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;bear-and-five-cards&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bear-and-five-cards&quot;&gt;&lt;/a&gt; Bear and Five Cards&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Bear and Finding Criminals题解</title>
    <link href="https://xys-blog.cf/posts/2949852796/"/>
    <id>https://xys-blog.cf/posts/2949852796/</id>
    <published>2022-05-11T11:59:14.000Z</published>
    <updated>2022-05-11T12:46:43.320Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="bear-and-finding-criminals"><a class="markdownIt-Anchor" href="#bear-and-finding-criminals"></a> Bear and Finding Criminals</h3><span id="more"></span><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><p>熊岛有n个城市，编号为1到n。城市被排列成一长排。城市i和j之间的距离等于|i-j|。</p><p>利马克是一名警察。他住在一个城市a，他的工作是抓捕罪犯。这很难，因为他不知道犯罪分子在哪个城市。不过，他知道每个城市最多只有一个罪犯。</p><p>利马克将使用BCD（熊犯罪探测器）。BCD会告诉Limak，从一个城市a开始，每隔一段距离就有多少个罪犯。</p><p>你知道在哪些城市有罪犯。在利马克使用BCD后，计算他能抓到的罪犯的数量。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>输入的第一行包含两个整数n和a（1≤a≤n≤100）–城市的数量和Limak居住的城市的索引。<br>第二行包含n个整数t1,t2,…,tn（0≤ti≤1）。在第i个城市有ti个罪犯。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>打印Limak将抓到的罪犯的数量。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入1</p><pre><code>6 31 1 1 0 1 0</code></pre><p>输出1</p><pre><code>3</code></pre><p>输入2</p><pre><code>5 20 0 0 1 0</code></pre><p>输出2</p><pre><code>1</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>在第一个样本中，有六个城市，利马克住在第三个城市（下面的蓝色箭头）。罪犯在标有红色的城市里。<br>使用BCD给Limak提供了以下信息。</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516346483990.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516346483990.png" alt=""></a></p><p>1.在离第三个城市的距离0处有一个罪犯–利马克确信这个罪犯正好在第三个城市。<br>2.在离第三城市的距离1处有一个罪犯–利马克不知道这个罪犯是在第二还是第四城市。<br>3.在离第三座城市的距离为2的地方有两个罪犯–利马克肯定有一个罪犯在第一座城市，一个在第五座城市。<br>4.每一个更大的距离都有零个罪犯。<br>因此，利马克将在第1、3和5个城市抓到罪犯，即总共有3个罪犯。 在第二个例子中（如下图），BCD给Limak的信息是，在距离Limak的城市2处有一个罪犯。在距离2的地方只有一个城市，所以Limak确定了一个罪犯的位置。</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516347087641.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516347087641.png" alt=""></a></p><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制2 秒<br>内存限制256 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>emmmm……<br><s>模拟好，模拟秒，模拟青蛙呱呱叫</s></p><p>咳咳咳，还好，模拟，按题目打即可</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> n,a;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">cin  &gt;&gt; n &gt;&gt; a;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">cin &gt;&gt; s[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (a &lt;= n/<span class="number">2</span>) {</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++) {</span><br><span class="line"><span class="keyword">if</span> (i &lt; a) {</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="number">1</span> &amp;&amp; s[<span class="number">2</span>*a-i] == <span class="number">1</span>){</span><br><span class="line">sum += <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == a) {</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="number">1</span>){</span><br><span class="line">sum++;</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (i &gt;= <span class="number">2</span>*a){</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="number">1</span>){</span><br><span class="line">sum++;</span><br><span class="line">} </span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line"><span class="keyword">if</span> (i &gt;= <span class="number">2</span>*a-n &amp;&amp; i &lt; a) {</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="number">1</span>&amp;&amp;s[<span class="number">2</span>*a-i] == <span class="number">1</span>){</span><br><span class="line">sum+=<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (i == a) {</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="number">1</span>){</span><br><span class="line">sum++;</span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">2</span>*a-n){</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="number">1</span>){</span><br><span class="line">sum++;</span><br><span class="line">} </span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    通过<br>分数    100<br>时间    1 MS<br>内存    712 KB<br>语言    C++<br>代码长度    797</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;bear-and-finding-criminals&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#bear-and-finding-criminals&quot;&gt;&lt;/a&gt; Bear and Finding Criminals&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>博客附件使用说明</title>
    <link href="https://xys-blog.cf/posts/4122137359/"/>
    <id>https://xys-blog.cf/posts/4122137359/</id>
    <published>2022-05-03T09:33:41.000Z</published>
    <updated>2022-05-03T09:51:33.853Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>咳咳咳，趁着五一假期</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;咳咳咳，趁着五一假期&lt;/p&gt;
&lt;/div&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js&quot;&gt;&lt;/</summary>
      
    
    
    
    
    <category term="附件" scheme="https://xys-blog.cf/tags/%E9%99%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>世界杯(worldcup)题解</title>
    <link href="https://xys-blog.cf/posts/751019721/"/>
    <id>https://xys-blog.cf/posts/751019721/</id>
    <published>2022-05-03T08:16:23.000Z</published>
    <updated>2022-05-03T08:56:12.553Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="世界杯worldcup"><a class="markdownIt-Anchor" href="#世界杯worldcup"></a> 世界杯(worldcup)</h3><span id="more"></span><h3 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h3><p>3014年世界杯足球赛就要开始了！作为卫冕冠军中国足球队的教练，手下每位球员都是猛将，如何摆出最强的11人阵容也是一件幸福的烦恼事啊。<br>众所周知，足球阵容里的11个球员都会被分配到场上某一个特别的位置，而这些位置主要分为守门员、后卫、中场和前锋四种，其中守门员有且只有一个，后卫、中场和前锋的人数取决于你安排的足球阵型。形容足球阵型的方法由后卫开始计算至前锋，但不把守门员计算在内。例如，3-5-2阵型是指有三个后卫、五个中场及两名前锋。由于竞争激烈，每位球员只会培养其中一种位置所需要的技能，所以他们每个人都只能胜任四个位置中的其中一种。<br>作为一个对球员能力了如指掌的教练，你给每个球员的综合水平进行量化。为了将阵型安排得更好，你的教练团队决定使用以下策略安排球员：首先按照顺序提出Q个阵型，分别代表第一阵型、第二阵型、……、第Q阵型。然后对于每个阵型，从仍未选择的球员中选择最好的对应数量的守门员、后卫、中场和前锋。比如说，对于第一阵型，在所有球员中选择；对于第二阵型，在除了第一阵型外的所有球员中选择；对于第三阵型，在除了第一阵型和第二阵型外的所有球员中选择；以此类推。<br>现在Q个阵型都已经确定，而你需要知道的，是每个阵型的平均综合水平分别是多少。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>第一行有四个整数K, D, M, F，分别表示守门员、后卫、中场和前锋供挑选的球员人数。<br>第二行有K个整数k_i，分别表示每个守门员的综合水平值。<br>第三行有D个整数d_i，分别表示每个后卫的综合水平值。<br>第四行有M个整数m_i，分别表示每个中场的综合水平值。<br>第五行有F个整数f_i，分别表示每个前锋的综合水平值。<br>第六行有一个整数Q，表示教练团队提出的阵型个数。<br>以下Q行，第i行三个整数A_i, B_i, C_i，由空格间隔，表示第i阵型是A_i - B_i - C_i阵型。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>输出Q行。对于第i种阵型，输出一个实数，表示该阵型平均综合水平的最大值，并四舍五入到小数点后2位。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>3 10 12 476 60 8778 84 84 84 81 82 72 51 77 5785 84 62 87 88 64 81 90 80 66 88 8565 83 63 7924 5 14 4 2</code></pre><p>输出</p><pre><code>85.6478.00</code></pre><h3 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h3><p>对于30%数据，K, D, M, F≤1000，Q≤10；<br>对于100%数据，1≤K, D, M, F≤10^5，0≤k_i, d_i, m_i, f_i≤10^8，1≤Q≤K，0≤A_i, B_i, C_i≤10，A_i+B_i+C_i=10，∑A_i≤D，∑B_i≤M，∑C_i≤F。</p><blockquote><p>时间限制: 1.000 Sec<br>内存限制: 128 MB<br>来源：Luo’s OJ &amp;&amp; 洛谷</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><h4 id="这题用优先队列"><a class="markdownIt-Anchor" href="#这题用优先队列"></a> 这题用优先队列！！！</h4><p><s>优先队列是队列</s>，先要包含头文件#include <queue>, 它和queue不同的就在于我们可以自定义其中数据的优先级, 让优先级高的排在队列前面,优先出队</queue></p><p>优先队列具有队列的所有特性，包括基本操作，只是在这基础上添加了内部的一个排序，它本质是一个堆实现的</p><p>接下来看code吧~</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n1,n2,n3,n4,T;</span><br><span class="line">priority_queue &lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,less&lt;<span class="type">int</span>&gt; &gt;q1,q2,q3,q4; <span class="comment">//定义优先队列 </span></span><br><span class="line"><span class="comment">//降序队列</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n1,&amp;n2,&amp;n3,&amp;n4); <span class="comment">//输入 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n1; i++) {</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">q1.<span class="built_in">push</span>(a); <span class="comment">//入队 </span></span><br><span class="line">} </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n2; i++) { <span class="comment">//这些都是第一个循环复制下来，微调的 </span></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">q2.<span class="built_in">push</span>(a);</span><br><span class="line">} </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n3; i++) {</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">q3.<span class="built_in">push</span>(a);</span><br><span class="line">} </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n4; i++) {</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">q4.<span class="built_in">push</span>(a);</span><br><span class="line">} </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span> (T--){ <span class="comment">//同样，按题意模拟即可 </span></span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="type">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">sum += q1.<span class="built_in">top</span>();</span><br><span class="line">q1.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= a; i++){</span><br><span class="line">sum += q2.<span class="built_in">top</span>(); <span class="comment">//读取元素 </span></span><br><span class="line">q2.<span class="built_in">pop</span>(); <span class="comment">//弹出 </span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; i++){ <span class="comment">//复制黏贴 </span></span><br><span class="line">sum += q3.<span class="built_in">top</span>();</span><br><span class="line">q3.<span class="built_in">pop</span>();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= c; i++){</span><br><span class="line">sum += q4.<span class="built_in">top</span>();</span><br><span class="line">q4.<span class="built_in">pop</span>();</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,(sum/<span class="number">11</span>)); <span class="comment">//最后输出即可 </span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>测评结果    正确<br>内存(KB)    4444KB<br>耗时(MS)    349ms<br>语言    C++<br>代码长度    909 bytes</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;世界杯worldcup&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#世界杯worldcup&quot;&gt;&lt;/a&gt; 世界杯(worldcup)&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>谢言射教你用hexo+github搭建博客（简约版）</title>
    <link href="https://xys-blog.cf/posts/3893026529/"/>
    <id>https://xys-blog.cf/posts/3893026529/</id>
    <published>2022-05-03T07:28:15.000Z</published>
    <updated>2022-05-03T08:41:17.951Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><h2 id="或许有人会问为什么是用github而不用coding和gitee呢因为coding已经改版貌似不支持静态页面了gitee使用又很麻烦要充钱还要实名认证最后还是选了github"><a class="markdownIt-Anchor" href="#或许有人会问为什么是用github而不用coding和gitee呢因为coding已经改版貌似不支持静态页面了gitee使用又很麻烦要充钱还要实名认证最后还是选了github"></a> 或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。</h2><span id="more"></span><h2 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h2><h3 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装Nodejs</h3><p>下载地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.2.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.2.png" alt=""></a><br>如果您是Win系统，64位的，请选择画红框的部分。</p><p>双击打开文件。<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.3.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.3.png" alt=""></a></p><p>安装我这里也不多说了，一路默认就行。</p><h3 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装git</h3><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>如果您是Win系统，64位的，请选择“Download for Windows”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.4.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.4.png" alt=""></a></p><p>下载好双击打卡文件，即可开始安装。<br>安装我这里也不多说了，一路默认就行。</p><h3 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h3><p>这里配置一下环境变量<br>“开始”里面打卡“设置”<br>![](<a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.6">https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.6</a> (2).png)</p><p>搜索“环境变量”<br>点击“编辑系统环境变量”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.7.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.7.png" alt=""></a></p><p>在弹出来的窗口中点击“环境变量”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.8.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.8.png" alt=""></a></p><p>在“系统变量”中找到“Path”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.9.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.9.png" alt=""></a></p><p>双击“Path”</p><p>在弹出来的窗口中的<strong>空白部分</strong>增加Nodejs的下载地址<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.10.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.10.png" alt=""></a></p><p>比如我下在D盘，位置就是D盘的<br>注意！！！！<br>是文件夹的位置！！<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.11.png" title="这个文件夹的地址！！！" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.11.png" alt="这个文件夹的地址！！！"></a></p><p>完成后按“确定”<br>**（三个窗口都按确定）**即可</p><h3 id="验证安装是否成功"><a class="markdownIt-Anchor" href="#验证安装是否成功"></a> 验证安装是否成功</h3><p>按住键盘上的“Win徽标键”，再按“R”<br>再弹出的窗口中输入“cmd”，再回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png" alt=""></a></p><p>在弹出的黑框框中分别输入“node -v”加回车和“npm -v”加回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.13.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.13.png" alt=""></a><br>如果能像我一样，得到版本号，那么就安装成功了<br>（失败请重复上述操作）</p><p>再回到桌面</p><p>鼠标右键按一下<br>如果像我一样，有“Git Bush Here”这个选项<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg" alt=""></a></p><p>那么恭喜您<br>准备就完成了！！！</p><h2 id="搭建博客"><a class="markdownIt-Anchor" href="#搭建博客"></a> 搭建博客</h2><h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装hexo</h3><p>在桌面右键，在弹出来的窗口中单击“Git Bush Here”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg" alt=""></a></p><p>在弹出来的窗口中输入要创建博客的地址<br>比如我的要搭建在F盘<br>那么我就输入</p><pre><code>cd /f/</code></pre><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.2.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.2.png" alt=""></a><br>如图，成功跳到了F盘</p><p>然后在git窗口中输入</p><pre><code>npm install hexo-cli -g</code></pre><p>结果如图（差不多即可）<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.3.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.3.png" alt=""></a></p><p>再输入</p><pre><code>hexo init myblog</code></pre><p>速度有点慢，需要稍等一会<br>结果如图（差不多即可）（以下省略）<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.4.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.4.png" alt=""></a></p><p>同时，你的（D，E，F……）盘下会出现应该叫“myblog”的文件夹<br>欧克，用git打开myblog这个文件夹</p><pre><code>cd myblog</code></pre><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.5.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.5.png" alt=""></a></p><p>接着在git运行</p><pre><code>hexo s</code></pre><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.6.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.6.png" alt=""></a></p><p>然后在浏览器中打开http://localhost:4000/<br>就能看见自己在本地搭建好的博客了<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.7.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.7.png" alt=""></a></p><p>这里附上hexo在git的常用命令</p><pre><code>hexo new“postName” #新建文章hexo new page“pageName" #新建页面hexo generate #生成静态页面至public目录hexo sprver #开启预览访问端口(默认端口4000,'ctrl +c'关闭server)hexo deploy #部署hexo help #查看帮助hexo version #查看Hexo的版本</code></pre><p>以及命令的缩写</p><pre><code>hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy</code></pre><p>和组合命令</p><pre><code>hexo s -g #生成并本地预览hexo d-g #生成并上传</code></pre><p>好，然后在git窗口按ctrl+c结束预览</p><p>如果你做到了这一步，那么恭喜你，你的博客在本地搭建成功了</p><p>接下来我们开始部署到github</p><h3 id="部署到github"><a class="markdownIt-Anchor" href="#部署到github"></a> 部署到github</h3><p>什么是github？</p><blockquote><p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub。2022年4月13日起，GitHub 开始封锁受美国制裁公司的俄罗斯开发者账户。      --------百度百科</p></blockquote><p>好了好了，不装了，开始</p><p>首先，我们要在github创建一个账号<br>github官网：<a href="https://github.com/">https://github.com/</a><br>额，但访问速度较慢的同学可以访问这个网址：<a href="http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/">http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/</a></p><p>点红框里的按钮（“Sign up”）注册<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.8.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.8.png" alt=""></a></p><p>然后输入你的邮箱，点continue<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.9.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.9.png" alt=""></a></p><p>设置一个密码，然后点continue<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.10.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.10.png" alt=""></a></p><p>再设置一个用户名，再点continue<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.11.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.11.png" alt=""></a></p><p>接下来如果想通过电子邮件接收github的产品更新和公告，就输入“y”，否则输入“n”<br>我选择“n”，再按“continue”<br>好，接下来按他的提示完成人类验证，就完成了<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.12.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.12.png" alt=""></a></p><p>接着它会发验证码到你的邮箱<br>在网页上输入验证码确认即可。<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.13.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.13.png" alt=""></a></p><p>然后它会统计一下你的信息，随便填一下就好<br>注：选套餐时最好选择“free”（免费）这个选项，不然会很麻烦</p><p>啊，终于注册好了<br>接着来创建一个仓库<br>先点红色框（界面右上角）的“+”<br>再点“New repository”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.14.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.14.png" alt=""></a></p><p>就会自动条到一个界面<br>在这个界面中的“Repository name”（项目名）中填</p><pre><code>你的github用户名.github.io</code></pre><p>例如我的</p><pre><code>teacherseth.github.io</code></pre><p>“Description”（描述）这一栏中随便填一下即可<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.15.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.15.png" alt=""></a></p><p>接着划到底部<br>点那个绿色的按钮（“Create repository”）<br>完成创建<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.16.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.16.png" alt=""></a></p><p>接着看图<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.17.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.17.png" alt=""></a></p><p>OK，用vscode打开hexo博客根目录的_config.yml文件<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.18.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.18.png" alt=""></a></p><p>划到最后面<br>修改“deploy”这一项<br>把</p><pre><code>deploy:type: ''</code></pre><p>改成</p><pre><code>deploy:type: gitrepo: 刚才复制的ssh代码branch: main</code></pre><p>比如我的</p><pre><code>deploy:type: gitrepo: git@github.com:teacherxys/teacherxys.github.io.gitbranch: main</code></pre><p>然后打开git<br>输入</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.19.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.19.png" alt=""></a></p><p>完成后打开 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 这个网址<br>在git输入</p><pre><code>cd ~/.ssh/rm -rf *ssh-keygen</code></pre><p>和四个回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.20.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.20.png" alt=""></a></p><p>然后输入</p><pre><code>cat id_rsa.pub</code></pre><p>接着把它输出的东西复制下来<br>在浏览器中点击“New ssh key”<br>创建一个ssh秘钥<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.21.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.21.png" alt=""></a></p><p>Title中随便填<br>key中填刚刚复制的东西<br>然后点“Add SSH key”创建<br>好<br>在git中输入</p><pre><code>cd 博客地址hexo d</code></pre><p>例如</p><pre><code>cd /f/mybloghexo d</code></pre><p>回车<br>稍等一会<br>再输入</p><pre><code>yes</code></pre><p>回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.22.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.22.png" alt=""></a></p><p>欧克，在浏览器中输入</p><pre><code>你的github用户名.github.io</code></pre><p>比如我的</p><pre><code>teachxys.github.io</code></pre><p>如果出现了这样<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.23.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.23.png" alt=""></a></p><p>那么恭喜你，博客搭建成功了！！！<br>撒花！！！<br>以后就能通过  <a href="http://xn--github-on9im33ani7aou3bged.github.io">你的github用户名.github.io</a>  来访问你的博客了！！！</p><h2 id="更换主题"><a class="markdownIt-Anchor" href="#更换主题"></a> 更换主题</h2><p>当然，您可以保留hexo的默认主题，也可以跟着本教程更换</p><h3 id="选择主题"><a class="markdownIt-Anchor" href="#选择主题"></a> 选择主题</h3><p>到 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 中选择一款您喜欢的主题，并点击它的名字进入它的github地址<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.1.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.1.png" alt=""></a></p><h3 id="更换主题-2"><a class="markdownIt-Anchor" href="#更换主题-2"></a> 更换主题</h3><p>这里以butterfly主题为例<br>划到自述文件的开头<br>然后复制红框中的代码<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.2.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.2.png" alt=""></a></p><p>在git中先打开博客（cd /f/myblog），然后把刚刚复制的东西黏贴到git中运行<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.3.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.3.png" alt=""></a></p><p>注：butterfly等主题还需在git中运行</p><p>npm install hexo-renderer-pug hexo-renderer-stylus<br>才行<br>接着更改博客根目录的_config.yml文件<br>把大约为第100行的theme配置改为</p><p>theme: 您刚刚更改的主题的名称<br>比如我的</p><p>theme: butterfly<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.4.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.4.png" alt=""></a></p><p>再在git中运行</p><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>即可<br>等待一会，在浏览器中打开自己的博客，就能看见变化了<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.5.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.5.png" alt=""></a></p><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><p>博主有关hexo博客搭建的文章已经写完了<br>但后续会推出hexo博客美化系列的文章<br>敬请期待……</p><p>感谢您的阅读！！！<br>（如有错请联系博主：xyswyy1@163.com或在评论区留言）</p><center>---------END--------</center></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;h2 id=&quot;或许有人会问为什么是用github而不用coding和gitee呢因为coding已经改版貌似不支持静态页面了gitee使用又很麻烦要充钱还要实名认证最后还是选了github&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#或许有人会问为什么是用github而不用coding和gitee呢因为coding已经改版貌似不支持静态页面了gitee使用又很麻烦要充钱还要实名认证最后还是选了github&quot;&gt;&lt;/a&gt; 或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。&lt;/h2&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://xys-blog.cf/tags/hexo/"/>
    
    <category term="github" scheme="https://xys-blog.cf/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>谢言射教你用hexo+github搭建博客（3.主题更换）</title>
    <link href="https://xys-blog.cf/posts/3200579984/"/>
    <id>https://xys-blog.cf/posts/3200579984/</id>
    <published>2022-05-02T10:23:57.000Z</published>
    <updated>2022-05-03T07:32:32.001Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>基于<a href="https://xys-blog.cf/posts/3031762228/">第二章的准备工作</a>，现在更换博客主题</p><span id="more"></span><h2 id="更换主题"><a class="markdownIt-Anchor" href="#更换主题"></a> 更换主题</h2><p>当然，您可以保留hexo的默认主题，也可以跟着本教程更换</p><h3 id="选择主题"><a class="markdownIt-Anchor" href="#选择主题"></a> 选择主题</h3><p>到 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 中选择一款您喜欢的主题，并点击它的名字进入它的github地址<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.1.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.1.png" alt=""></a></p><h3 id="更换主题-2"><a class="markdownIt-Anchor" href="#更换主题-2"></a> 更换主题</h3><p>这里以butterfly主题为例<br>划到自述文件的开头<br>然后复制红框中的代码<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.2.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.2.png" alt=""></a></p><p>在git中先打开博客（cd /f/myblog），然后把刚刚复制的东西黏贴到git中运行<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.3.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.3.png" alt=""></a></p><p>注：butterfly等主题还需在git中运行</p><p>npm install hexo-renderer-pug hexo-renderer-stylus<br>才行<br>接着更改博客根目录的_config.yml文件<br>把大约为第100行的theme配置改为</p><p>theme: 您刚刚更改的主题的名称<br>比如我的</p><p>theme: butterfly<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.4.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.4.png" alt=""></a></p><p>再在git中运行</p><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>即可<br>等待一会，在浏览器中打开自己的博客，就能看见变化了<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.5.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.5.png" alt=""></a></p><p>博主有关hexo博客搭建的文章已经写完了<br>但后续会推出hexo博客美化系列的文章<br>敬请期待……</p><p>感谢您的阅读！！！<br>（如有错请联系博主：xyswyy1@163.com或在评论区留言）</p><center>---------END--------</center></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;基于&lt;a href=&quot;https://xys-blog.cf/posts/3031762228/&quot;&gt;第二章的准备工作&lt;/a&gt;，现在更换博客主题&lt;/p&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://xys-blog.cf/tags/hexo/"/>
    
    <category term="github" scheme="https://xys-blog.cf/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>4893 - 圆桌问题题解</title>
    <link href="https://xys-blog.cf/posts/323266332/"/>
    <id>https://xys-blog.cf/posts/323266332/</id>
    <published>2022-05-02T08:47:49.000Z</published>
    <updated>2022-05-02T13:00:32.767Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="4893-圆桌问题"><a class="markdownIt-Anchor" href="#4893-圆桌问题"></a> 4893 - 圆桌问题</h3><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><span id="more"></span><p>圆桌上围坐着2n个人。其中n个人是好人，另外n个人是坏人。如果从第一个人开始数数，数到第m个人，则立即处死该人；然后从被处死的人之后开始数数，再将数到的第m个人处死……依此方法不断处死围坐在圆桌上的人。试问预先应如何安排这些好人与坏人的座位，能使得在处死n个人之后，圆桌上围坐的剩余的n个人全是好人。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>多组数据，每组数据输入：好人和坏人的人数n（&lt;=32767）、步长m（&lt;=32767）；</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>对于每一组数据，输出2n个大写字母，‘G’表示好人，‘B’表示坏人，50个字母为一行，不允许出现空白字符。相邻数据间留有一空行。</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>2 32 4</code></pre><p>输出</p><pre><code>GBBGBGGB</code></pre><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制1 秒<br>内存限制128 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>就是模拟+vector</p><pre><code>#include &lt;bits/stdc++.h&gt;using namespace std;int T_T;int n,m;vector&lt;int&gt; v;int main(){//freopen(".in","r",stdin);//freopen(".out","w",stdout);while (cin &gt;&gt; n &gt;&gt; m){for (int i = 0; i &lt; 2*n; i++){v.push_back(i);}int sum = 0;for (int i = 0; i &lt; n; i++){sum = (sum+m-1)%v.size();v.erase(v.begin()+sum); }int len = 0;for (int i = 0; i &lt; 2*n; i++){if ((i%50) == 0 &amp;&amp; i != 0){cout &lt;&lt; endl;}if (len &lt; v.size() &amp;&amp; i == v[len]){len++;cout &lt;&lt; "G";} else {cout &lt;&lt; "B";}}cout &lt;&lt; endl &lt;&lt; endl;v.clear();}return 0;}</code></pre><blockquote><p>测评结果    通过<br>分数    100<br>时间    22 MS<br>内存    940 KB<br>语言    C++<br>代码长度    630</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;4893-圆桌问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#4893-圆桌问题&quot;&gt;&lt;/a&gt; 4893 - 圆桌问题&lt;/h3&gt;
&lt;h3 id=&quot;描述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#描述&quot;&gt;&lt;/a&gt; 描述&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>4894 - 机器人走路题解</title>
    <link href="https://xys-blog.cf/posts/1031250688/"/>
    <id>https://xys-blog.cf/posts/1031250688/</id>
    <published>2022-05-02T07:59:42.000Z</published>
    <updated>2022-05-02T10:20:22.136Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="4894-机器人走路"><a class="markdownIt-Anchor" href="#4894-机器人走路"></a> 4894 - 机器人走路</h3><h3 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h3><span id="more"></span><p>这是一个简单的生存游戏，你控制一个机器人从一个棋盘的起始点(1,1)走到棋盘的终点(n,m)。游戏的规则描述如下：<br>1.机器人一开始在棋盘的起始点并有起始点所标有的能量。<br>2.机器人只能向右或者向下走，并且每走一步消耗一单位能量。<br>3.机器人不能在原地停留。<br>4.当机器人选择了一条可行路径后，当他走到这条路径的终点时，他将只有终点所标记的能量。</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/20210818175000_72419.gif" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/20210818175000_72419.gif" alt=""></a></p><p>如上图，机器人一开始在(1,1)点，并拥有4单位能量，蓝色方块表示他所能到达的点，如果他在这次路径选择中选择的终点是(2,4)点，当他到达(2,4)点时将拥有1单位的能量，并开始下一次路径选择，直到到达(6,6)点。<br>我们的问题是机器人有多少种方式从起点走到终点。这可能是一个很大的数，输出的结果对10000取模。</p><h3 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h3><p>第一行输入两个整数n,m(1 &lt;= n,m &lt;= 100)。表示棋盘的大小。接下来输入n行,每行m个整数e(0 &lt;= e &lt; 20)。</p><h3 id="输出"><a class="markdownIt-Anchor" href="#输出"></a> 输出</h3><p>对于每一组数据输出方式总数对10000取模的结果.</p><h3 id="样例"><a class="markdownIt-Anchor" href="#样例"></a> 样例</h3><p>输入</p><pre><code>6 64 5 6 6 4 32 2 3 1 7 21 1 4 6 2 75 8 4 3 9 57 6 6 2 1 53 1 1 3 7 2</code></pre><p>输出</p><pre><code>3948</code></pre><h3 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h3><blockquote><p>时间限制1 秒<br>内存限制128 MB<br>来源        FYOJ</p></blockquote><h2 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h2><p>咳咳咳，进入题解部分</p><h3 id="老师的做法"><a class="markdownIt-Anchor" href="#老师的做法"></a> 老师的做法</h3><p>额……<br>老师直接暴力<br><s>骗分过样例，暴力出奇迹！</s><br>接着直接看他的代码吧</p><pre><code>#include &lt;cstdio&gt;using namespace std;int a[111][111],f[111][111];int main(){    int n,m;    scanf("%d%d",&amp;n,&amp;m);    for(int i\=1; i&lt;=n; ++i)        for(int j=1; j&lt;=m; ++j)            scanf("%d",&amp;a[i][j]);    //确定一个起点，确定一个终点    //去验证这个起点-&gt;这个终点的可行性    //a[i][j]-&gt;a[x][y]怎么去验证（i,j）-&gt;（×,y）    //是不是只要保证a[i][j]能不能够提供我i,j---&gt;x,y    //重点：（i,j）---&gt;（x,y）的距离为 x+y-i-j     f[1][1]=1;    for(int x=1; x&lt;=n; ++x)        for(int y=1; y&lt;=m; ++y) //x,y终点            for(int i=1; i&lt;=x; ++i)                for(int j=1; j&lt;=y; ++j) //i,j起点                 {                    if(i==x &amp;&amp; j==y) continue;                    if(x+y-i-j&lt;=a[i][j]) f[x][y]=(f[x][y]+f[i][j])%10000;                }    printf("%d",f[n][m]);    return 0;}</code></pre><blockquote><p>测评结果    通过<br>分数    100<br>时间    52 MS<br>内存    668 KB<br>语言    C++<br>代码长度    475</p></blockquote><h3 id="我的做法"><a class="markdownIt-Anchor" href="#我的做法"></a> 我的做法</h3><p>鹅妈妈……就记忆化搜索</p><pre><code>#include &lt;bits/stdc++.h&gt;using namespace std;int n,m;int a[110][110];int b[110][110];int dfs(int x,int y){    if (b[x][y] &gt;= 0){    return b[x][y];    }    b[x][y] = 0;    for (int i = 0; i &lt;= a[x][y]; i++){    for (int j = 0; j &lt;= a[x][y]-i; j++){    int X = x+i,Y = y+j;    if (X &gt;= 1 &amp;&amp; X &lt;= n &amp;&amp; Y &gt;= 1 &amp;&amp; Y &lt;= m){    int kkksc03 = dfs(X,Y);              b[x][y] = (b[x][y]+kkksc03)%10000;      }    }    }    return b[x][y];}int main(){    //freopen(".in","r",stdin);    //freopen(".out","w",stdout);    cin &gt;&gt; n &gt;&gt; m;    for (int i = 1; i &lt;= n; i++){    for (int j = 1; j &lt;= m; j++){    cin &gt;&gt; a[i][j];    }    }    memset(b,-1,sizeof(b));    b[n][m] = 1;    int chen_zhe = dfs(1,1);    cout &lt;&lt; chen_zhe;    return 0;}</code></pre><blockquote><p>测评结果    通过<br>分数    100<br>时间    7 MS<br>内存    816 KB<br>语言    C++<br>代码长度    732</p></blockquote></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题目&quot;&gt;&lt;/a&gt; 题目&lt;/h2&gt;
&lt;h3 id=&quot;4894-机器人走路&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#4894-机器人走路&quot;&gt;&lt;/a&gt; 4894 - 机器人走路&lt;/h3&gt;
&lt;h3 id=&quot;描述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#描述&quot;&gt;&lt;/a&gt; 描述&lt;/h3&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://xys-blog.cf/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>谢言射教你用hexo+github搭建博客（2.本地搭建和github部署）</title>
    <link href="https://xys-blog.cf/posts/3031762228/"/>
    <id>https://xys-blog.cf/posts/3031762228/</id>
    <published>2022-04-30T13:10:59.000Z</published>
    <updated>2022-05-03T07:31:45.784Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>基于<a href="https://xys-blog.cf/posts/4293843122/">第一章的准备工作</a>，现在开始搭建+部署博客</p><span id="more"></span><h2 id="本地搭建"><a class="markdownIt-Anchor" href="#本地搭建"></a> 本地搭建</h2><h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装hexo</h3><p>在桌面右键，在弹出来的窗口中单击“Git Bush Here”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg" alt=""></a></p><p>在弹出来的窗口中输入要创建博客的地址<br>比如我的要搭建在F盘<br>那么我就输入</p><pre><code>cd /f/</code></pre><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.2.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.2.png" alt=""></a><br>如图，成功跳到了F盘</p><p>然后在git窗口中输入</p><pre><code>npm install hexo-cli -g</code></pre><p>结果如图（差不多即可）<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.3.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.3.png" alt=""></a></p><p>再输入</p><pre><code>hexo init myblog</code></pre><p>速度有点慢，需要稍等一会<br>结果如图（差不多即可）（以下省略）<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.4.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.4.png" alt=""></a></p><p>同时，你的（D，E，F……）盘下会出现应该叫“myblog”的文件夹<br>欧克，用git打开myblog这个文件夹</p><pre><code>cd myblog</code></pre><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.5.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.5.png" alt=""></a></p><p>接着在git运行</p><pre><code>hexo s</code></pre><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.6.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.6.png" alt=""></a></p><p>然后在浏览器中打开http://localhost:4000/<br>就能看见自己在本地搭建好的博客了<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.7.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.7.png" alt=""></a></p><p>这里附上hexo在git的常用命令</p><pre><code>hexo new“postName” #新建文章hexo new page“pageName" #新建页面hexo generate #生成静态页面至public目录hexo sprver #开启预览访问端口(默认端口4000,'ctrl +c'关闭server)hexo deploy #部署hexo help #查看帮助hexo version #查看Hexo的版本</code></pre><p>以及命令的缩写</p><pre><code>hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy</code></pre><p>和组合命令</p><pre><code>hexo s -g #生成并本地预览hexo d-g #生成并上传</code></pre><p>好，然后在git窗口按ctrl+c结束预览</p><p>如果你做到了这一步，那么恭喜你，你的博客在本地搭建成功了</p><p>接下来我们开始部署到github</p><h3 id="部署到github"><a class="markdownIt-Anchor" href="#部署到github"></a> 部署到github</h3><p>什么是github？</p><blockquote><p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub。2022年4月13日起，GitHub 开始封锁受美国制裁公司的俄罗斯开发者账户。      --------百度百科</p></blockquote><p>好了好了，不装了，开始</p><p>首先，我们要在github创建一个账号<br>github官网：<a href="https://github.com/">https://github.com/</a><br>额，但访问速度较慢的同学可以访问这个网址：<a href="http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/">http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/</a></p><p>点红框里的按钮（“Sign up”）注册<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.8.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.8.png" alt=""></a></p><p>然后输入你的邮箱，点continue<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.9.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.9.png" alt=""></a></p><p>设置一个密码，然后点continue<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.10.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.10.png" alt=""></a></p><p>再设置一个用户名，再点continue<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.11.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.11.png" alt=""></a></p><p>接下来如果想通过电子邮件接收github的产品更新和公告，就输入“y”，否则输入“n”<br>我选择“n”，再按“continue”<br>好，接下来按他的提示完成人类验证，就完成了<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.12.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.12.png" alt=""></a></p><p>接着它会发验证码到你的邮箱<br>在网页上输入验证码确认即可。<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.13.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.13.png" alt=""></a></p><p>然后它会统计一下你的信息，随便填一下就好<br>注：选套餐时最好选择“free”（免费）这个选项，不然会很麻烦</p><p>啊，终于注册好了<br>接着来创建一个仓库<br>先点红色框（界面右上角）的“+”<br>再点“New repository”<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.14.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.14.png" alt=""></a></p><p>就会自动条到一个界面<br>在这个界面中的“Repository name”（项目名）中填</p><pre><code>你的github用户名.github.io</code></pre><p>例如我的</p><pre><code>teacherseth.github.io</code></pre><p>“Description”（描述）这一栏中随便填一下即可<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.15.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.15.png" alt=""></a></p><p>接着划到底部<br>点那个绿色的按钮（“Create repository”）<br>完成创建<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.16.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.16.png" alt=""></a></p><p>接着看图<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.17.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.17.png" alt=""></a></p><p>OK，用vscode打开hexo博客根目录的_config.yml文件<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.18.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.18.png" alt=""></a></p><p>划到最后面<br>修改“deploy”这一项<br>把</p><pre><code>deploy:type: ''</code></pre><p>改成</p><pre><code>deploy:type: gitrepo: 刚才复制的ssh代码branch: main</code></pre><p>比如我的</p><pre><code>deploy:type: gitrepo: git@github.com:teacherxys/teacherxys.github.io.gitbranch: main</code></pre><p>然后打开git<br>输入</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.19.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.19.png" alt=""></a></p><p>完成后打开 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 这个网址<br>在git输入</p><pre><code>cd ~/.ssh/rm -rf *ssh-keygen</code></pre><p>和四个回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.20.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.20.png" alt=""></a></p><p>然后输入</p><pre><code>cat id_rsa.pub</code></pre><p>接着把它输出的东西复制下来<br>在浏览器中点击“New ssh key”<br>创建一个ssh秘钥<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.21.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.21.png" alt=""></a></p><p>Title中随便填<br>key中填刚刚复制的东西<br>然后点“Add SSH key”创建<br>好<br>在git中输入</p><pre><code>cd 博客地址hexo d</code></pre><p>例如</p><pre><code>cd /f/mybloghexo d</code></pre><p>回车<br>稍等一会<br>再输入</p><pre><code>yes</code></pre><p>回车<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.22.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.22.png" alt=""></a></p><p>欧克，在浏览器中输入</p><pre><code>你的github用户名.github.io</code></pre><p>比如我的</p><pre><code>teachxys.github.io</code></pre><p>如果出现了这样<br><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.23.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.23.png" alt=""></a></p><p>那么恭喜你，博客搭建成功了！！！<br>撒花！！！<br>以后就能通过  <a href="http://xn--github-on9im33ani7aou3bged.github.io">你的github用户名.github.io</a>  来访问你的博客了！！！</p><p>接下来，就等博主写下一篇有关hexo博客搭建的文章吧</p><p>感谢您的阅读！！！<br>（如有错请联系博主：xyswyy1@163.com或在评论区留言）</p><center>---------END--------</center></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;基于&lt;a href=&quot;https://xys-blog.cf/posts/4293843122/&quot;&gt;第一章的准备工作&lt;/a&gt;，现在开始搭建+部署博客&lt;/p&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="https://xys-blog.cf/tags/hexo/"/>
    
    <category term="github" scheme="https://xys-blog.cf/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>解决浏览器因为时钟快了无法显示网页的问题</title>
    <link href="https://xys-blog.cf/posts/2290789902/"/>
    <id>https://xys-blog.cf/posts/2290789902/</id>
    <published>2022-04-25T12:45:27.000Z</published>
    <updated>2022-04-25T13:01:47.398Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>咳咳咳，就是想解决一些同志因为时钟快了无法显示网页的问题。<br>话不多说，开始吧！</p><hr><span id="more"></span><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2><h3 id="方案一使用cmd-time命令"><a class="markdownIt-Anchor" href="#方案一使用cmd-time命令"></a> 方案一，使用cmd time命令</h3><p>首先同时按住win键+r键，打开“运行”</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png" alt=""></a></p><p>然后输入cmd<br>再回车</p><p>好，弹出了一个黑框框</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.1.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.1.png" alt=""></a></p><p>然后查看当前时间，输入</p><pre><code>time /t</code></pre><p>再换行<br>结果应该是系统现在的时间</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.2.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.2.png" alt=""></a></p><p>如果和当时时间不符的话……<br>嘿嘿</p><p>再输入</p><pre><code>time 当前时间</code></pre><p>再换行<br>举个例子<br>比如说我现在是11点11分11秒<br>就输入</p><pre><code>time 11:11:11</code></pre><p>再换行</p><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.3.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.3.png" alt=""></a></p><p>好了，现在试试，（浏览器）应该可以用了</p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;咳咳咳，就是想解决一些同志因为时钟快了无法显示网页的问题。&lt;br&gt;
话不多说，开始吧！&lt;/p&gt;
&lt;hr&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="浏览器" scheme="https://xys-blog.cf/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="技术" scheme="https://xys-blog.cf/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>平凡（改编自朱自清的《匆匆》）</title>
    <link href="https://xys-blog.cf/posts/3919692788/"/>
    <id>https://xys-blog.cf/posts/3919692788/</id>
    <published>2022-04-14T11:50:15.000Z</published>
    <updated>2022-04-14T12:25:36.250Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><center>《平凡》</center><p>燕子去了，有再来的时候；杨柳枯了，有再青的时候；桃花谢了，有再开的时候。但是，聪明的，你告诉我，我们的满分为什么一去不复返呢？——是有人偷了他们罢：那是谁？又藏在何处呢？是他们自己逃走了罢：如今（现在）又到了哪里呢？</p><span id="more"></span><p>我不知道他们给了我多少满分，但我的手确乎是渐渐空虚了。在默默里算着，八千多满分已经从我手中溜去，像针尖上一滴水滴在大海里，我的满分滴在成绩的流里，没有声音，也没有影子。我不禁头涔涔而泪潸潸了。</p><p>去的尽管去了，来的尽管来着；去来的中间，又怎样地平凡呢？早上我起来的时候，小屋里射进两三方斜斜的太阳。太阳他有脚啊，轻轻悄悄地挪移了；我也茫茫然跟着旋转。于是——洗手的时候，满分从水盆里过去；吃饭的时候，满分从饭碗里过去；默默时，便从凝然的双眼前过去。我觉察他去的平凡了，伸出手遮挽时，他又从遮挽着的手边过去，天黑时，我躺在床上，他便伶伶俐俐地从我身上跨过，从我脚边飞去了。等我睁开眼和太阳再见，这算又溜走了一日。我掩着面叹息。但是新来的满分的影儿又开始在叹息里闪过了。</p><p>在逃去如飞的满分里，在千门万户的世界里的我能做些什么呢？只有徘徊罢了，只有平凡罢了；在八千多日的平凡里，除徘徊外，又剩些什么呢？过去的满分如轻烟，被微风吹散了，如薄雾，被初阳蒸融了；我留着些什么痕迹呢？我何曾留着像游丝样的痕迹呢？我赤裸裸来到这世界，转眼间也将赤裸裸的回去罢？但不能平的，为什么偏要白白走这一遭啊？</p><p>你聪明的，告诉我，我们的满分为什么一去不复返呢？</p><hr><p>往期推荐</p><ul><li><a href="https://xys-blog.cf/posts/746134704">《红岩》梗概</a></li><li><a href="https://xys-blog.cf/posts/3479680266">学校游记3</a></li><li><a href="https://xys-blog.cf/posts/336091895">小学数学必背公式</a></li><li><a href="https://xys-blog.cf/posts/1563617092">小学奥数公式</a></li><li><a href="https://xys-blog.cf/posts/1793860868">学校游记2</a></li></ul></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;center&gt;《平凡》&lt;/center&gt;
&lt;p&gt;燕子去了，有再来的时候；杨柳枯了，有再青的时候；桃花谢了，有再开的时候。但是，聪明的，你告诉我，我们的满分为什么一去不复返呢？——是有人偷了他们罢：那是谁？又藏在何处呢？是他们自己逃走了罢：如今（现在）又到了哪里呢？&lt;/p&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="文章改编" scheme="https://xys-blog.cf/tags/%E6%96%87%E7%AB%A0%E6%94%B9%E7%BC%96/"/>
    
    <category term="趣文" scheme="https://xys-blog.cf/tags/%E8%B6%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>c++ map用法总结</title>
    <link href="https://xys-blog.cf/posts/297322009/"/>
    <id>https://xys-blog.cf/posts/297322009/</id>
    <published>2022-04-13T12:59:36.000Z</published>
    <updated>2022-04-13T13:00:52.639Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h3 id="1map简介"><a class="markdownIt-Anchor" href="#1map简介"></a> 1，map简介</h3><p>map是STL的一个关联容器，它提供一对一的hash。</p><span id="more"></span><p>第一个可以称为关键字(key)，每个关键字只能在map中出现一次；<br>第二个可能称为该关键字的值(value)；</p><p>map以模板(泛型)方式实现，可以存储任意类型的数据，包括使用者自定义的数据类型。Map主要用于资料一对一映射(one-to-one)的情況，map內部的实现自建一颗红黑树，这颗树具有对数据自动排序的功能。在map内部所有的数据都是有序的，后边我们会见识到有序的好处。比如一个班级中，每个学生的学号跟他的姓名就存在著一对一映射的关系。</p><p><a href="https://img-blog.csdnimg.cn/img_convert/ab94f358cc379299731b9aaa4814fd47.png" class="gallery-item"><img src="https://img-blog.csdnimg.cn/img_convert/ab94f358cc379299731b9aaa4814fd47.png" alt=""></a></p><h3 id="2map的功能"><a class="markdownIt-Anchor" href="#2map的功能"></a> 2，map的功能</h3><p>自动建立key － value的对应。key 和 value可以是任意你需要的类型，包括自定义类型。</p><h3 id="3使用map"><a class="markdownIt-Anchor" href="#3使用map"></a> 3，使用map</h3><p>使用map得包含map类所在的头文件</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span>  <span class="comment">//注意，STL头文件没有扩展名.h</span></span></span><br></pre></td></tr></tbody></table></figure><p>map对象是模板类，需要关键字和存储对象两个模板参数：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std:map&lt;<span class="type">int</span>, string&gt; personnel;</span><br></pre></td></tr></tbody></table></figure><p>这样就定义了一个用int作为索引,并拥有相关联的指向string的指针.</p><p>为了使用方便，可以对模板类进行一下类型定义，</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> map&lt;<span class="type">int</span>,CString&gt; UDT_MAP_INT_CSTRING;</span><br><span class="line"></span><br><span class="line">UDT_MAP_INT_CSTRING enumMap;</span><br></pre></td></tr></tbody></table></figure><h3 id="4map的构造函数"><a class="markdownIt-Anchor" href="#4map的构造函数"></a> 4，map的构造函数</h3><p>map共提供了6个构造函数，这块涉及到内存分配器这些东西，略过不表，在下面我们将接触到一些map的构造方法，这里要说下的就是，我们通常用如下方法构造一个map：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map&lt;<span class="type">int</span>, string&gt; mapStudent;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="5插入元素"><a class="markdownIt-Anchor" href="#5插入元素"></a> 5，插入元素</h3><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个map对象</span></span><br><span class="line">map&lt;<span class="type">int</span>, string&gt; mapStudent;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第一种 用insert函數插入pair</span></span><br><span class="line">mapStudent.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, string&gt;(<span class="number">000</span>, <span class="string">"student_zero"</span>));</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第二种 用insert函数插入value_type数据</span></span><br><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span>(<span class="number">001</span>, <span class="string">"student_one"</span>));</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第三种 用"array"方式插入</span></span><br><span class="line">mapStudent[<span class="number">123</span>] = <span class="string">"student_first"</span>;</span><br><span class="line">mapStudent[<span class="number">456</span>] = <span class="string">"student_second"</span>;</span><br></pre></td></tr></tbody></table></figure><p>以上三种用法，虽然都可以实现数据的插入，但是它们是有区别的，当然了第一种和第二种在效果上是完成一样的，用insert函数插入数据，在数据的 插入上涉及到集合的唯一性这个概念，即当map中有这个关键字时，insert操作是不能在插入数据的，但是用数组方式就不同了，它可以覆盖以前该关键字对 应的值，用程序说明如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">001</span>, <span class="string">"student_one"</span>));</span><br><span class="line"> </span><br><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">001</span>, <span class="string">"student_two"</span>));</span><br></pre></td></tr></tbody></table></figure><p>上面这两条语句执行后，map中001这个关键字对应的值是“student_one”，第二条语句并没有生效，那么这就涉及到我们怎么知道insert语句是否插入成功的问题了，可以用pair来获得是否插入成功，程序如下</p>  <figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构造定义，返回一个pair对象</span></span><br><span class="line"><span class="function">pair&lt;iterator,<span class="type">bool</span>&gt; <span class="title">insert</span> <span class="params">(<span class="type">const</span> value_type&amp; val)</span></span>;</span><br><span class="line"> </span><br><span class="line">pair&lt;map&lt;<span class="type">int</span>, string&gt;::iterator, <span class="type">bool</span>&gt; Insert_Pair;</span><br><span class="line"> </span><br><span class="line">Insert_Pair = mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">001</span>, <span class="string">"student_one"</span>));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(!Insert_Pair.second)</span><br><span class="line">    cout &lt;&lt; <span class="string">""</span>Error insert <span class="keyword">new</span> element<span class="string">" &lt;&lt; endl;</span></span><br></pre></td></tr></tbody></table></figure><p>我们通过pair的第二个变量来知道是否插入成功，它的第一个变量返回的是一个map的迭代器，如果插入成功的话Insert_Pair.second应该是true的，否则为false。</p><h3 id="6-查找元素"><a class="markdownIt-Anchor" href="#6-查找元素"></a> 6， 查找元素</h3><p>当所查找的关键key出现时，它返回数据所在对象的位置，如果沒有，返回iter与end函数的值相同。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// find 返回迭代器指向当前查找元素的位置否则返回map::end()位置</span></span><br><span class="line">iter = mapStudent.<span class="built_in">find</span>(<span class="string">"123"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(iter != mapStudent.<span class="built_in">end</span>())</span><br><span class="line">       cout&lt;&lt;<span class="string">"Find, the value is"</span>&lt;&lt;iter-&gt;second&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   cout&lt;&lt;<span class="string">"Do not Find"</span>&lt;&lt;endl;</span><br></pre></td></tr></tbody></table></figure><h3 id="7-刪除与清空元素"><a class="markdownIt-Anchor" href="#7-刪除与清空元素"></a> 7， 刪除与清空元素</h3><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//迭代器刪除</span></span><br><span class="line">iter = mapStudent.<span class="built_in">find</span>(<span class="string">"123"</span>);</span><br><span class="line">mapStudent.<span class="built_in">erase</span>(iter);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//用关键字刪除</span></span><br><span class="line"><span class="type">int</span> n = mapStudent.<span class="built_in">erase</span>(<span class="string">"123"</span>); <span class="comment">//如果刪除了會返回1，否則返回0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//用迭代器范围刪除 : 把整个map清空</span></span><br><span class="line">mapStudent.<span class="built_in">erase</span>(mapStudent.<span class="built_in">begin</span>(), mapStudent.<span class="built_in">end</span>());</span><br><span class="line"><span class="comment">//等同于mapStudent.clear()</span></span><br></pre></td></tr></tbody></table></figure><h3 id="8map的大小"><a class="markdownIt-Anchor" href="#8map的大小"></a> 8，map的大小</h3><p>在往map里面插入了数据，我们怎么知道当前已经插入了多少数据呢，可以用size函数，用法如下：</p>  <figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> nSize = mapStudent.<span class="built_in">size</span>();</span><br></pre></td></tr></tbody></table></figure><h3 id="9map的基本操作函数"><a class="markdownIt-Anchor" href="#9map的基本操作函数"></a> 9，map的基本操作函数：</h3><pre><code> C++ maps是一种关联式容器，包含“关键字/值”对 begin()         返回指向map头部的迭代器 clear(）        删除所有元素 count()         返回指定元素出现的次数, (帮助评论区理解： 因为key值不会重复，所以只能是1 or 0) empty()         如果map为空则返回true end()           返回指向map末尾的迭代器 equal_range()   返回特殊条目的迭代器对 erase()         删除一个元素 find()          查找一个元素 get_allocator() 返回map的配置器 insert()        插入元素 key_comp()      返回比较元素key的函数 lower_bound()   返回键值&gt;=给定元素的第一个位置 max_size()      返回可以容纳的最大元素个数 rbegin()        返回一个指向map尾部的逆向迭代器 rend()          返回一个指向map头部的逆向迭代器 size()          返回map中元素的个数 swap()           交换两个map upper_bound()    返回键值&gt;给定元素的第一个位置 value_comp()     返回比较元素value的函数</code></pre></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h3 id=&quot;1map简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1map简介&quot;&gt;&lt;/a&gt; 1，map简介&lt;/h3&gt;
&lt;p&gt;map是STL的一个关联容器，它提供一对一的hash。&lt;/p&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="c++" scheme="https://xys-blog.cf/tags/c/"/>
    
    <category term="语法" scheme="https://xys-blog.cf/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>学校游记4（未完待续……）</title>
    <link href="https://xys-blog.cf/posts/20400546/"/>
    <id>https://xys-blog.cf/posts/20400546/</id>
    <published>2022-04-13T12:29:47.000Z</published>
    <updated>2022-05-12T10:57:25.550Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class=".article-gallery"><h2 id="2022413"><a class="markdownIt-Anchor" href="#2022413"></a> 2022.4.13</h2><p>《我和我的同住》<br>《我和我的同住》<br>《我和我的同住》</p><span id="more"></span><h2 id="2022414"><a class="markdownIt-Anchor" href="#2022414"></a> 2022.4.14</h2><p><a href="https://xys-blog.cf/posts/3919692788/">look!</a></p><h2 id="2022418"><a class="markdownIt-Anchor" href="#2022418"></a> 2022.4.18</h2><p>同志们同志们<br>啊啊啊<br>我回来了<br>今天嘛……<br>我们一定要谢谢那两个班<br>因为他们<br>我们不用长跑测试了！！！<br><s>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈！</s><br>额<br>其他就没事啦<br>拜拜~</p><h2 id="2022419"><a class="markdownIt-Anchor" href="#2022419"></a> 2022.4.19</h2><p>同志们赶紧去搜集有关孔子，关羽，项羽的成语（每个各两个）<br>并要记住《真理诞生于一百个问号之后》那一课的三个人物。<br>会让你们受益匪浅的！！！！<br>快点，不然就来不及了！！！</p><h2 id="2022424"><a class="markdownIt-Anchor" href="#2022424"></a> 2022.4.24</h2><p>哼，我有点生气了<br>我今天才得到消息<br>周三要做水果沙拉<br>这……<br>算了<br>其实也不关我事<br>我就在旁边吃瓜……<br>嘿嘿</p><h2 id="2022428"><a class="markdownIt-Anchor" href="#2022428"></a> 2022.4.28</h2><p>逆天，开始了</p><h2 id="202256"><a class="markdownIt-Anchor" href="#202256"></a> 2022.5.6</h2><p>明天要考试了，早点休息吧~</p><h2 id="2022511"><a class="markdownIt-Anchor" href="#2022511"></a> 2022.5.11</h2><p>烤翅烤翅烤翅烤翅~</p><h2 id="2022512"><a class="markdownIt-Anchor" href="#2022512"></a> 2022.5.12</h2><p><a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%B1%B6%E5%B7%9D14%E5%B9%B4.jpg" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%B1%B6%E5%B7%9D14%E5%B9%B4.jpg" alt=""></a></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;2022413&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2022413&quot;&gt;&lt;/a&gt; 2022.4.13&lt;/h2&gt;
&lt;p&gt;《我和我的同住》&lt;br&gt;
《我和我的同住》&lt;br&gt;
《我和我的同住》&lt;/p&gt;&lt;/div&gt;</summary>
    
    
    
    
    <category term="游记" scheme="https://xys-blog.cf/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="学校" scheme="https://xys-blog.cf/tags/%E5%AD%A6%E6%A0%A1/"/>
    
  </entry>
  
</feed>
